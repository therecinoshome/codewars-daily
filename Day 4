<h1 id="h1" class="hide">00:00:00</h1>
<form>
  <div id="form">
    <input id="hours" type="number" placeholder="Hours" min="0" max="23">
    <input id="mins" type="number" placeholder="Minutes" min="0" max="59">
    <input id="secs" type="number" placeholder="Seconds" min="0" max="59">
  </div>
  <div>
    <button id="reset" type="reset">Reset Timer</button>
    <button id="pause" type="button" class="hide">Pause Timer</button>
    <button id="start" type="submit">Start Timer</button>
  </div>
</form>
<audio id="audio">
  <source src="https://20-20-20-timer.netlify.app/sound/gentle-alarm.mp3" type="audio/mpeg">
</audio>
<style>
.hide {
  display: none;
}
</style>

<script>
const $ = selector => document.getElementById(selector);

const timerUI = {
  start: $('start'),
  pause: $('pause'),
  reset: $('reset'),
  hours: $('hours'),
  mins: $('mins'),
  secs: $('secs'),
  h1: $('h1'),
  form: $('form'),
  audio: $('audio'),
}

const {start, pause, reset, h1 } = timerUI;
let paused = false;
let resetted = false;
let timeRemaining = 0;
let timerEnd = 0;
let timeout = null;

function startTimer(e) {
  e.preventDefault()
  let now = new Date().valueOf();
  let hours = timerUI.hours.value || 0;
  let mins = timerUI.mins.value || 0;
  let secs = timerUI.secs.value || 0;
  if (!hours && !mins && !secs) return alert('You must set a time to start the timer');
  if (hours > 23) hours = 23;
  if (mins > 59) mins = 59;
  if (secs > 59) secs = 59;
  h1.classList.remove('hide');
  h1.textContent = `${String(hours).padStart(2, '0')}:${String(mins).padStart(2, '0')}:${String(secs).padStart(2, '0')}`;
  form.classList.add('hide');
  start.classList.add('hide');
  pause.classList.remove('hide');
  timerEnd = now + (hours * 3600000) + (mins * 60000) + (secs * 1000);
  resetted = false;
  lowerCount(now, timerEnd);
}

function lowerCount(now, timerEnd) {
    timeout = setTimeout(() => {
      timeRemaining = timerEnd - now;
      let hours = Math.floor(timeRemaining / 3600000);
      let mins = Math.floor((timeRemaining % 3600000) / 60000);
      let secs = Math.floor(((timeRemaining % 3600000) % 60000) / 1000);
      h1.textContent = `${String(hours).padStart(2, '0')}:${String(mins).padStart(2, '0')}:${String(secs).padStart(2, '0')}`;
      now = new Date().valueOf();
      if(timerEnd > now && paused === false && resetted === false) {
        lowerCount(now, timerEnd);
      } else {
        audio.play()
        resetTimer()
      }
    }, 1000)
}

function pauseTimer() {
  if (paused === false && timeRemaining !== 0) {
    paused = true;
    pause.textContent = 'Resume Timer';
    clearTimeout(timeout);
  } else if (paused === true && timeRemaining !== 0) {
    paused = false;
    pause.textContent = 'Pause Timer'
    let now = new Date().valueOf();
    let timerEnd = now + timeRemaining;
    lowerCount(now, timerEnd);
  }
}

function resetTimer() {
  h1.textContent = '00:00:00'
  paused = false;
  pause.textContent = 'Pause Timer';
  form.classList.remove('hide');
  start.classList.remove('hide');
  timeRemaining = 0;
  timerEnd = 0;
  resetted = true;
  clearTimeout(timeout);
}

start.addEventListener('click', startTimer);
pause.addEventListener('click', pauseTimer);
reset.addEventListener('click', resetTimer);
</script>
